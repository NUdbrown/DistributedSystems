import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

import com.hallaLib.HallaStor;

public class MultithreadedServer implements Runnable{
	private ServerSocket ssSocket = null;
	private Thread currentThread = null;
	private boolean isStopped = false;

	public static void main (String [] args){
		MultithreadedServer server = new MultithreadedServer();
		new Thread(server).start();

		try {
		    Thread.sleep(20 * 1000);
		} catch (InterruptedException e) {
		    e.printStackTrace();
		}
//		System.out.println("Stopping Server");
//		server.stop();
		
		
	}
	
	private void startServerSocket(){
		try{
			ssSocket = new ServerSocket(3030);
		    System.out.println("Listening");
		}catch (IOException e) {
            throw new RuntimeException("Cannot open port 8080", e);
		}
	}

    public void run(){
        synchronized(this){
            this.currentThread = Thread.currentThread();
        }
        startServerSocket();
        while(! isStopped()){
            Socket clientSocket = null;
            try {
                clientSocket = this.ssSocket.accept();
		         System.out.println("Connected");		         

            } catch (IOException e) {
                if(isStopped()) {
                    System.out.println("Server Stopped.") ;
                    return;
                }
                throw new RuntimeException(
                    "Error accepting client connection", e);
            }
            new Thread(
                new WorkerRunnable(
                    clientSocket, "Multithreaded Server")
            ).start();
        }
        System.out.println("Server Stopped.") ;
    }
	
    private synchronized boolean isStopped() {
        return this.isStopped;
    }

    public synchronized void stop(){
        this.isStopped = true;
        try {
            this.ssSocket.close();
        } catch (IOException e) {
            throw new RuntimeException("Error closing server", e);
        }
    }
	
}
