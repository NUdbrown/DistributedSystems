import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Random;

public class Client {
	private Random random;
	private ArrayList<String> listOfObjects = new ArrayList<String>();
	
	public static void main(String[] args) {
		Client c = new Client();
		c.run();
	}

	public void run() {
		random = new Random();

		try {
			for (int i = 1; i <= 1; i++) {
				Socket s = new Socket("localhost", 3030);
				DataOutputStream output = new DataOutputStream(s.getOutputStream());
				DataInputStream input = new DataInputStream(s.getInputStream());
				// random decision car or driver
				int choiceOfObj = random.nextInt(2);
				// write operation
				output.writeByte(1);
				output.flush();
				// set up car or driver
				if (choiceOfObj == 0) {
					output.write(0);
					writeRacecar(createCar(), output);
				} else {
					output.write(1);
					writeDriver(createDriver(), output);
				}
				// write data wanting to send

				int returnMsg = input.readInt();
				if (returnMsg == 5) {
					System.out.println(returnMsg + "\ncount at " + i);
					String keyOfItem = input.readUTF();
					listOfObjects.add(keyOfItem);
					System.out.println("Ive add the new key and Im done!");
					s.close();
					printList();
				}

			}

		} catch (UnknownHostException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	private void printList() {
		int index = 1;
		for(String item : listOfObjects){			
			System.out.println(index + ": " + item);
			index++;
		}
		
	}

	private Racecar createCar() {
		return new Racecar(generateId(), "BMW", "SLXR",
				generateHorsePower(), generateQuarterMileTime());
	}

	private Driver createDriver() {
		int index = 0;
		String name = "";
		if (random.nextBoolean() == false) {
			name = "DanTheMan";
		} else {
			name = "SherlTheGirl";
		}
		return new Driver(generateId(), name + index++,
				generateAge(), random.nextBoolean());
	}

	// writing
	public void writeRacecar(Racecar car, OutputStream out) throws IOException {

		// send car id
		out.write(car.getId());
		out.flush();
		// send length of make
		out.write(car.getMake().length());
		out.flush();
		// send length of model
		out.write(car.getModel().length());
		out.flush();
		// send chars of make
		out.write(car.getMake().getBytes());
		out.flush();
		// send chars of model
		out.write(car.getModel().getBytes());
		out.flush();
		// send horsepower
		out.write(car.getHorsePower());
		out.flush();
		// send quarter-mile
		out.write(car.getHorsePower());
		out.flush();

	}

	public void writeDriver(Driver d, OutputStream out) throws IOException {
		// send id
		out.write(d.getId());
		// Send lengthOfName
		out.write(d.getName().length());
		// send Name
		out.write(d.getName().getBytes());
		// send age
		out.write(d.getAge());
		// send isMale
		if (d.isMale() == true) {
			out.write(1);
		} else
			out.write(0);
	}

	private int generateQuarterMileTime() {
		return random.nextInt(5) + 1;
	}

	private int generateHorsePower() {
		return random.nextInt(1500) + 1;
	}

	private int generateId() {
		return random.nextInt(200);
	}
	
	private int generateAge(){
		int max = 55;
		int min = 25;
		return  random.nextInt((max - min) + 1) + min;
	}

	public ArrayList<String> getListOfObjects() {
		return listOfObjects;
	}

}
